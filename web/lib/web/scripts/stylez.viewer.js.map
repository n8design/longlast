{"version":3,"sources":["web/scripts/stylez.viewer.js"],"names":["SessionStorage","require","evalHTML","partialHTML","parser","DOMParser","fixedContent","parseFromString","partialDoc","DocumentFragment","append","body","firstChild","innerHTML","error","message","fetchPattern","url","fetch","then","response","status","json","catch","console","pattern","data","patterns","sort","a","b","file","curSession","getCurrentFilter","currentPatterns","filter","item","category","currentFilter","length","curIndex","index","maxIndex","title","updateStatus","patternsContainer","document","querySelector","forEach","curTemplate","stylez","templates","templateContent","undefined","evaledContent","content","split","pop","replace","insertAdjacentHTML"],"mappings":"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","sourcesContent":["const SessionStorage = require('./stylez.storage');\n\nconst evalHTML = (partialHTML) => {\n\n    try {\n        let parser = new DOMParser();\n        let fixedContent = parser.parseFromString(partialHTML, 'text/html');\n\n        let partialDoc = new DocumentFragment();\n        partialDoc.append(fixedContent.body);\n\n        return partialDoc.firstChild.innerHTML;\n\n    } catch (error) {\n        return error.message;\n    }\n\n}\n\nconst fetchPattern = async () => {\n\n    let url = './app/config/stylez.json';\n\n    return fetch(url)\n        .then((response) => {\n\n            if (response.status === 200) {\n\n                return response.json();\n\n            } else {\n\n                throw \"Error current status: \" + response.status + \" - \" + url;\n\n            }\n\n        })\n        .catch(error => {\n\n            console.error('ERROR:::::', error);\n\n        })\n\n}\n\nlet pattern = fetchPattern();\n\npattern.then(data => {\n\n    let patterns = data.patterns.sort((a, b) => {\n        if (a.file < b.file) {\n            return -1;\n        }\n        if (a.file > b.file) {\n            return 1;\n        }\n        return 0;\n    })\n\n    var curSession = SessionStorage.getCurrentFilter();\n\n    let currentPatterns = patterns.filter(item => {\n        return item.category === curSession.category;\n    });\n\n    let currentFilter = SessionStorage.getCurrentFilter();\n\n    if (curSession.category === 'pages' ||\n        curSession.category === 'templates') {\n\n        if (currentPatterns.length !== 0) {\n\n            let curIndex = currentFilter.index ? currentFilter.index : 0;\n\n            currentFilter.maxIndex = currentPatterns.length - 1;\n            currentFilter.index = curIndex;\n\n            currentFilter.title = currentPatterns[curIndex].title;\n\n            currentPatterns = [currentPatterns[curIndex]];\n\n            // let currentPatternTitle = document.querySelector('.a-filtername');\n            // currentPatternTitle.textContent = currentFilter.title;\n\n            SessionStorage.updateStatus(currentFilter);\n\n        } else {\n\n            currentFilter.maxIndex = null;\n            currentFilter.index = null;\n            currentFilter.title = null;\n\n            SessionStorage.updateStatus(currentFilter);\n\n        }\n\n    } else {\n\n        currentFilter.maxIndex = null;\n        currentFilter.index = null;\n        currentFilter.title = null;\n\n        SessionStorage.updateStatus(currentFilter);    \n\n    }\n\n    if (currentPatterns.length !== 0) {\n\n        const patternsContainer = document.querySelector('.patterns');\n\n        currentPatterns.forEach(pattern => {\n\n            let curTemplate = stylez.templates[pattern.title];\n\n            let templateContent;\n\n            try {\n                templateContent = curTemplate();\n            } catch (error) {\n                console.error(`Error in Pattern ${pattern.title}: ${error.message}`);\n                templateContent = `Error in Pattern ${pattern.title}: ${error.message}`;\n            }\n\n            if (curTemplate !== undefined && templateContent !== 'undefined') {\n\n                let evaledContent = evalHTML(templateContent);\n\n                const content = `<div data-category='${pattern.category}' class='viewer-pattern'>\n            <div class='viewer-header'>\n                <div title='${ pattern.title }' class='viewer-title'>${ pattern.title }</div>\n                <div title='${pattern.file }' class='viewer-filename'>${pattern.file.split('/').pop()}</div>\n            </div>\n            <div class='viewer-content'>\n            ${ evaledContent }\n            </div>\n            <pre class='viewer-code'>${ evaledContent.replace(/</g, '&lt;').replace(/>/g, '&gt;') }</pre>\n            </div>`;\n\n                patternsContainer.insertAdjacentHTML('beforeend', content);\n\n            }\n\n        })\n    }\n\n})"],"file":"stylez.viewer.js"}