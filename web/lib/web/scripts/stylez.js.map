{"version":3,"sources":["web/scripts/stylez.js"],"names":["_CONSTANTS","require","SessionStorage","Events","Stylez","CONSTANTS","btnsCatFilter","document","querySelectorAll","dmAtomicFilter","forEach","btn","addEventListener","filterCategories","btnDeviceSelector","dmDeviceTypes","filterDeviceType","window","setWidth","btnTocs","querySelector","dmFilterTocs","toggleTocs","btnPagers","pagers","pager","console","log","dataset","filter","changeIndex","setCurrentFilter","event","getCurrentFilter","ui"],"mappings":";;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AACA,IAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA9B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,iBAAD,CAAtB;;AAEA,WAAaG,MAAb,GAEI,kBAAc;AAAA;;AACV;AACA,OAAKC,SAAL,GAAiBL,UAAjB;AACA,OAAKG,MAAL,GAAcA,MAAd,CAHU,CAKV;;AACA,OAAKG,aAAL,GAAqBC,QAAQ,CAACC,gBAAT,CAA0B,KAAKH,SAAL,CAAeI,cAAzC,CAArB;AACA,OAAKH,aAAL,CAAmBI,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAChCA,IAAAA,GAAG,CAACC,gBAAJ,CAAqB,OAArB,EAA8BT,MAAM,CAACU,gBAArC;AACH,GAFD,EAPU,CAWV;;AACA,OAAKC,iBAAL,GAAyBP,QAAQ,CAACC,gBAAT,CAA0B,KAAKH,SAAL,CAAeU,aAAzC,CAAzB;AACA,OAAKD,iBAAL,CAAuBJ,OAAvB,CAA+B,UAACC,GAAD,EAAS;AACpCA,IAAAA,GAAG,CAACC,gBAAJ,CAAqB,OAArB,EAA8BT,MAAM,CAACa,gBAArC;AACH,GAFD;AAIAC,EAAAA,MAAM,CAACL,gBAAP,CAAwB,QAAxB,EAAkCT,MAAM,CAACe,QAAzC,EAjBU,CAkBV;;AACAf,EAAAA,MAAM,CAACe,QAAP,CAAgB,IAAhB;AAEA,OAAKC,OAAL,GAAeZ,QAAQ,CAACa,aAAT,CAAuB,KAAKf,SAAL,CAAegB,YAAtC,CAAf;;AACA,MAAI,KAAKF,OAAL,KAAiB,IAAjB,IAAyB,KAAKA,OAAL,KAAiB,IAA9C,EAAoD;AAEhD,SAAKA,OAAL,CAAaP,gBAAb,CAA8B,OAA9B,EAAuCT,MAAM,CAACmB,UAA9C;AAEH;;AAED,OAAKC,SAAL,GAAiBhB,QAAQ,CAACC,gBAAT,CAA0B,KAAKH,SAAL,CAAemB,MAAzC,CAAjB;AAEA,OAAKD,SAAL,CAAeb,OAAf,CAAuB,UAAAe,KAAK,EAAI;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAN,CAAcC,MAA1B;AACAJ,IAAAA,KAAK,CAACb,gBAAN,CAAuB,OAAvB,EAAgCT,MAAM,CAAC2B,WAAvC;AACH,GAHD;AAKA5B,EAAAA,cAAc,CAAC6B,gBAAf;AAEAd,EAAAA,MAAM,CAACL,gBAAP,CAAwB,SAAxB,EAAmC,UAACoB,KAAD,EAAS;AACxCN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYzB,cAAc,CAAC+B,gBAAf,EAAZ;AACH,GAJD;AAMH,CA7CL;AAiDA,IAAMC,EAAE,GAAG,IAAI9B,MAAJ,EAAX","sourcesContent":["const _CONSTANTS = require('./stylez.constants');\nconst SessionStorage = require('./stylez.storage');\nconst Events = require('./stylez.events');\n\nexport class Stylez {\n\n    constructor() {\n        // init internamels\n        this.CONSTANTS = _CONSTANTS;\n        this.Events = Events;\n\n        // register category filters\n        this.btnsCatFilter = document.querySelectorAll(this.CONSTANTS.dmAtomicFilter);\n        this.btnsCatFilter.forEach((btn) => {\n            btn.addEventListener('click', Events.filterCategories);\n        });\n\n        // register device types\n        this.btnDeviceSelector = document.querySelectorAll(this.CONSTANTS.dmDeviceTypes);\n        this.btnDeviceSelector.forEach((btn) => {\n            btn.addEventListener('click', Events.filterDeviceType);\n        });\n\n        window.addEventListener('resize', Events.setWidth);\n        // set the initial width\n        Events.setWidth(null);\n\n        this.btnTocs = document.querySelector(this.CONSTANTS.dmFilterTocs);\n        if (this.btnTocs !== null && this.btnTocs !== null) {\n\n            this.btnTocs.addEventListener('click', Events.toggleTocs);\n\n        }\n\n        this.btnPagers = document.querySelectorAll(this.CONSTANTS.pagers);\n        \n        this.btnPagers.forEach(pager => {\n            console.log(pager.dataset.filter);\n            pager.addEventListener('click', Events.changeIndex)\n        });\n\n        SessionStorage.setCurrentFilter();\n\n        window.addEventListener('storage', (event)=>{\n            console.log(event);\n            console.log('Something changed');\n            console.log(SessionStorage.getCurrentFilter());\n        })\n\n    }\n\n}\n\nconst ui = new Stylez;"],"file":"stylez.js"}