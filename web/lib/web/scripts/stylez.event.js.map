{"version":3,"sources":["web/scripts/stylez.event.js"],"names":["Events","btnList","curButton","forEach","btn","classList","add","remove","SessionStorage","updateStatus","event","target","allButtons","document","querySelectorAll","_CONSTANTS","dmAtomicFilter","_toggleButtons","iframe","querySelector","viewerFrame","contentWindow","location","href","dmDeviceTypes","newWidth","dataset","size","style","maxWidth","setTimeout","curWidth","undefined","value","window","innerWidth","curHeight","innerHeight","tocs","toggle","module","exports"],"mappings":"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","sourcesContent":["export class Events {\n\n    static _toggleButtons(btnList, curButton) {\n\n        btnList.forEach((btn) => {\n\n            if (btn === curButton) {\n\n                btn.classList.add('selected');\n\n            } else {\n\n                btn.classList.remove('selected');\n\n            }\n\n        });\n\n        // updateing Session Status\n        SessionStorage.updateStatus();\n\n    }\n\n    // Handle Category selection\n    static filterCategories(event) {\n\n        let curButton = event.target,\n            allButtons = document.querySelectorAll(_CONSTANTS.dmAtomicFilter);\n\n        Events._toggleButtons(allButtons, curButton);\n\n        let iframe = document.querySelector(_CONSTANTS.viewerFrame);\n        iframe.contentWindow.location.href = \"viewer.html\"\n\n    }\n\n    // Handle deviceFiltering\n    static filterDeviceType(event) {\n\n        let curButton = event.target,\n            allButtons = document.querySelectorAll(_CONSTANTS.dmDeviceTypes),\n            viewerFrame = document.querySelector(_CONSTANTS.viewerFrame);\n\n        Events._toggleButtons(allButtons, curButton);\n\n        // Check for update the full width\n        const newWidth = curButton.dataset.size !== 'full' ? curButton.dataset.size : -1;\n\n        // if width !== full set precicse pixels\n        if (newWidth !== -1) {\n\n            viewerFrame.style.maxWidth = `${newWidth}px`;\n\n        } else {\n\n            // unset and rest to 100vw;\n            viewerFrame.style.maxWidth = \"100vw\";\n\n        }\n\n\n    }\n\n    static setWidth(event) {\n\n        // Timeout to make sure resize is finished\n        setTimeout(() => {\n\n            let curWidth = document.querySelector(_CONSTANTS.curWidth);\n\n            if (curWidth !== null && curWidth !== undefined) {\n                curWidth.value = window.innerWidth;\n            }\n\n            let curHeight = document.querySelector(_CONSTANTS.curHeight);\n\n            if (curHeight !== null && curHeight !== undefined) {\n                curHeight.value = window.innerHeight;\n            }\n\n        }, 250);\n\n    }\n\n    static toggleTocs(event) {\n\n        let tocs = document.querySelector(_CONSTANTS.tocs);\n\n        tocs.classList.toggle('active');\n\n    }\n\n}\n\nmodule.exports = Events;"],"file":"stylez.event.js"}